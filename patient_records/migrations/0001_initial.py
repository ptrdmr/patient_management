# Generated by Django 4.2.17 on 2025-02-02 05:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Adls',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('ambulation', models.CharField(max_length=100)),
                ('continence', models.CharField(max_length=100)),
                ('transfer', models.CharField(max_length=100)),
                ('toileting', models.CharField(blank=True, max_length=100, null=True)),
                ('transferring', models.CharField(blank=True, max_length=100, null=True)),
                ('dressing', models.CharField(max_length=100)),
                ('feeding', models.CharField(max_length=100)),
                ('bathing', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('source', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ADL',
                'verbose_name_plural': 'ADLs',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_identifier', models.CharField(default='Unknown Patient', max_length=100)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete')], max_length=10)),
                ('record_type', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('previous_values', models.JSONField(default=dict)),
                ('new_values', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CbcLabs',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('rbc', models.DecimalField(decimal_places=2, max_digits=5)),
                ('wbc', models.DecimalField(decimal_places=2, max_digits=5)),
                ('hemoglobin', models.DecimalField(decimal_places=2, max_digits=5)),
                ('hematocrit', models.DecimalField(decimal_places=2, max_digits=5)),
                ('mcv', models.DecimalField(decimal_places=2, max_digits=5)),
                ('mchc', models.DecimalField(decimal_places=2, max_digits=5)),
                ('rdw', models.DecimalField(decimal_places=2, max_digits=5)),
                ('platelets', models.DecimalField(decimal_places=2, max_digits=7)),
                ('mch', models.DecimalField(decimal_places=2, max_digits=5)),
                ('neutrophils', models.DecimalField(decimal_places=2, max_digits=5)),
                ('lymphocytes', models.DecimalField(decimal_places=2, max_digits=5)),
                ('monocytes', models.DecimalField(decimal_places=2, max_digits=5)),
                ('eosinophils', models.DecimalField(decimal_places=2, max_digits=5)),
                ('basophils', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'CBC Lab',
                'verbose_name_plural': 'CBC Labs',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ClinicalNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('notes', models.TextField()),
                ('source', models.CharField(default='manual', max_length=100)),
            ],
            options={
                'verbose_name': 'Clinical Note',
                'verbose_name_plural': 'Clinical Notes',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ClinicalReadModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('patient_id', models.UUIDField()),
                ('event_type', models.CharField(max_length=100)),
                ('data', models.JSONField()),
                ('recorded_at', models.DateTimeField()),
                ('schema_version', models.CharField(default='1.0', max_length=10)),
                ('symptoms_summary', models.JSONField(help_text='Latest symptoms data', null=True)),
                ('provider_details', models.JSONField(help_text='Provider information', null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CmpLabs',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('sodium', models.DecimalField(decimal_places=2, max_digits=5)),
                ('potassium', models.DecimalField(decimal_places=2, max_digits=5)),
                ('chloride', models.DecimalField(decimal_places=2, max_digits=5)),
                ('co2', models.DecimalField(decimal_places=2, max_digits=5)),
                ('glucose', models.DecimalField(decimal_places=2, max_digits=5)),
                ('bun', models.DecimalField(decimal_places=2, max_digits=5)),
                ('creatinine', models.DecimalField(decimal_places=2, max_digits=5)),
                ('calcium', models.DecimalField(decimal_places=2, max_digits=5)),
                ('protein', models.DecimalField(decimal_places=2, max_digits=5)),
                ('albumin', models.DecimalField(decimal_places=2, max_digits=5)),
                ('bilirubin', models.DecimalField(decimal_places=2, max_digits=5)),
                ('gfr', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'CMP Lab',
                'verbose_name_plural': 'CMP Labs',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('icd_code', models.CharField(max_length=10)),
                ('diagnosis', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'diagnoses',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EventStore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('aggregate_id', models.UUIDField()),
                ('aggregate_type', models.CharField(max_length=100)),
                ('event_type', models.CharField(max_length=100)),
                ('event_data', models.JSONField()),
                ('metadata', models.JSONField(null=True)),
                ('version', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Imaging',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('type', models.CharField(max_length=100)),
                ('body_part', models.CharField(blank=True, max_length=100, null=True)),
                ('findings', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('source', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'imaging',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LabResultsReadModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('patient_id', models.UUIDField()),
                ('lab_type', models.CharField(max_length=50)),
                ('results', models.JSONField()),
                ('performed_at', models.DateTimeField()),
                ('schema_version', models.CharField(default='1.0', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('weight', models.FloatField()),
                ('value', models.FloatField(blank=True, null=True)),
                ('source', models.CharField(max_length=100)),
                ('nutritional_intake', models.CharField(max_length=200)),
                ('mac', models.CharField(max_length=100)),
                ('fast', models.CharField(max_length=100)),
                ('pps', models.CharField(max_length=100)),
                ('plof', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'measurements',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Medications',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_prescribed', models.DateField()),
                ('drug', models.CharField(max_length=200)),
                ('dose', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('route', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True, null=True)),
                ('prn', models.BooleanField(default=False, verbose_name='PRN (As Needed)')),
                ('dc_date', models.DateField(blank=True, null=True, verbose_name='Discontinue Date')),
            ],
        ),
        migrations.CreateModel(
            name='NoteAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='note_attachments/%Y/%m/%d/')),
                ('filename', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='NoteTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Occurrences',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('occurrence_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('action_taken', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('source', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'occurrences',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_number', models.CharField(help_text='External patient identifier', max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], max_length=1)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('emergency_contact', models.TextField()),
                ('insurance_info', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('category', models.CharField(choices=[('OVERVIEW', 'Overview'), ('CLINICAL', 'Clinical Data'), ('VISITS', 'Visits'), ('MEDICATIONS', 'Medications'), ('LABS', 'Lab Results'), ('VITALS', 'Vital Signs'), ('GENERAL', 'General Notes')], default='GENERAL', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_pinned', models.BooleanField(default=False)),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientReadModel',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('current_data', models.JSONField()),
                ('last_updated', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('snapshot_data', models.JSONField(null=True)),
                ('snapshot_version', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('provider', models.CharField(max_length=100)),
                ('practice', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=20)),
                ('fax', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vitals',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('blood_pressure', models.CharField(max_length=20)),
                ('temperature', models.FloatField()),
                ('spo2', models.FloatField()),
                ('pulse', models.IntegerField()),
                ('respirations', models.IntegerField()),
                ('supp_o2', models.BooleanField(default=False)),
                ('pain', models.IntegerField()),
                ('source', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient')),
            ],
            options={
                'verbose_name_plural': 'vitals',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Visits',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('visit_type', models.CharField(max_length=100)),
                ('practice', models.CharField(max_length=200)),
                ('chief_complaint', models.TextField(blank=True, null=True)),
                ('assessment', models.TextField(blank=True, null=True)),
                ('plan', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('source', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.provider')),
            ],
            options={
                'verbose_name_plural': 'visits',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Symptoms',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Date when symptom was reported')),
                ('symptom', models.CharField(help_text='Primary symptom description', max_length=200)),
                ('severity', models.IntegerField(blank=True, choices=[(1, '1 - Minimal'), (2, '2 - Mild'), (3, '3 - Moderate'), (4, '4 - Severe'), (5, '5 - Very Severe')], help_text='Severity level of symptom', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the symptom', null=True)),
                ('source', models.CharField(help_text='Source of symptom information', max_length=100)),
                ('person_reporting', models.CharField(help_text='Person who reported the symptom', max_length=200)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symptoms', to='patient_records.patient')),
                ('provider', models.ForeignKey(blank=True, help_text='Healthcare provider associated with this symptom', null=True, on_delete=django.db.models.deletion.SET_NULL, to='patient_records.provider')),
            ],
            options={
                'verbose_name': 'Symptom',
                'verbose_name_plural': 'Symptoms',
                'ordering': ['-date', '-last_updated'],
            },
        ),
        migrations.CreateModel(
            name='RecordRequestLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('request_type', models.CharField(blank=True, max_length=100, null=True)),
                ('purpose', models.TextField(blank=True, null=True)),
                ('records_requested', models.TextField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient')),
            ],
            options={
                'verbose_name': 'Record Request Log',
                'verbose_name_plural': 'Record Request Logs',
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='provider',
            index=models.Index(fields=['provider'], name='patient_rec_provide_c1436e_idx'),
        ),
        migrations.AddIndex(
            model_name='provider',
            index=models.Index(fields=['practice'], name='patient_rec_practic_5d2fad_idx'),
        ),
        migrations.AddIndex(
            model_name='provider',
            index=models.Index(fields=['-date'], name='patient_rec_date_269535_idx'),
        ),
        migrations.AddIndex(
            model_name='patientreadmodel',
            index=models.Index(fields=['last_updated'], name='patient_rec_last_up_7a1e29_idx'),
        ),
        migrations.AddField(
            model_name='patientnote',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='patientnote',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='patientnote',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='patient_records.patient'),
        ),
        migrations.AddField(
            model_name='patientnote',
            name='tags',
            field=models.ManyToManyField(blank=True, to='patient_records.notetag'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['patient_number'], name='patient_rec_patient_2e6b46_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['last_name', 'first_name'], name='patient_rec_last_na_fe3823_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['date_of_birth'], name='patient_rec_date_of_ec9b15_idx'),
        ),
        migrations.AddField(
            model_name='occurrences',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddField(
            model_name='noteattachment',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='patient_records.patientnote'),
        ),
        migrations.AddField(
            model_name='medications',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddField(
            model_name='measurements',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddIndex(
            model_name='labresultsreadmodel',
            index=models.Index(fields=['patient_id', 'performed_at'], name='patient_rec_patient_81d391_idx'),
        ),
        migrations.AddIndex(
            model_name='labresultsreadmodel',
            index=models.Index(fields=['lab_type', 'performed_at'], name='patient_rec_lab_typ_30fd39_idx'),
        ),
        migrations.AddField(
            model_name='imaging',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddIndex(
            model_name='eventstore',
            index=models.Index(fields=['aggregate_id', 'version'], name='patient_rec_aggrega_0c74a5_idx'),
        ),
        migrations.AddIndex(
            model_name='eventstore',
            index=models.Index(fields=['timestamp'], name='patient_rec_timesta_cebbb5_idx'),
        ),
        migrations.AddConstraint(
            model_name='eventstore',
            constraint=models.UniqueConstraint(fields=('aggregate_id', 'version'), name='unique_aggregate_version'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='provider',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='patient_records.provider'),
        ),
        migrations.AddField(
            model_name='cmplabs',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddIndex(
            model_name='clinicalreadmodel',
            index=models.Index(fields=['patient_id', 'recorded_at'], name='patient_rec_patient_166cb7_idx'),
        ),
        migrations.AddIndex(
            model_name='clinicalreadmodel',
            index=models.Index(fields=['event_type', 'recorded_at'], name='patient_rec_event_t_33c652_idx'),
        ),
        migrations.AddIndex(
            model_name='clinicalreadmodel',
            index=models.Index(fields=['last_updated'], name='patient_rec_last_up_fe3fe6_idx'),
        ),
        migrations.AddField(
            model_name='clinicalnotes',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddField(
            model_name='clinicalnotes',
            name='provider',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='patient_records.provider'),
        ),
        migrations.AddField(
            model_name='cbclabs',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddField(
            model_name='audittrail',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='patient_records.patient'),
        ),
        migrations.AddField(
            model_name='audittrail',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='adls',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_records.patient'),
        ),
        migrations.AddIndex(
            model_name='vitals',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_291486_idx'),
        ),
        migrations.AddIndex(
            model_name='visits',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_897fe7_idx'),
        ),
        migrations.AddIndex(
            model_name='visits',
            index=models.Index(fields=['visit_type'], name='patient_rec_visit_t_239451_idx'),
        ),
        migrations.AddIndex(
            model_name='symptoms',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_b37a93_idx'),
        ),
        migrations.AddIndex(
            model_name='symptoms',
            index=models.Index(fields=['symptom'], name='patient_rec_symptom_0e1f2a_idx'),
        ),
        migrations.AddIndex(
            model_name='symptoms',
            index=models.Index(fields=['-last_updated'], name='patient_rec_last_up_5e9b49_idx'),
        ),
        migrations.AddIndex(
            model_name='recordrequestlog',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_f00dd4_idx'),
        ),
        migrations.AddIndex(
            model_name='recordrequestlog',
            index=models.Index(fields=['request_type'], name='patient_rec_request_12a02e_idx'),
        ),
        migrations.AddIndex(
            model_name='patientnote',
            index=models.Index(fields=['patient', '-created_at'], name='patient_rec_patient_98d5b7_idx'),
        ),
        migrations.AddIndex(
            model_name='patientnote',
            index=models.Index(fields=['category'], name='patient_rec_categor_532d14_idx'),
        ),
        migrations.AddIndex(
            model_name='occurrences',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_8362b9_idx'),
        ),
        migrations.AddIndex(
            model_name='occurrences',
            index=models.Index(fields=['occurrence_type'], name='patient_rec_occurre_d5dc3a_idx'),
        ),
        migrations.AddIndex(
            model_name='medications',
            index=models.Index(fields=['-date_prescribed'], name='patient_rec_date_pr_b647ed_idx'),
        ),
        migrations.AddIndex(
            model_name='medications',
            index=models.Index(fields=['patient', '-date_prescribed'], name='patient_rec_patient_f8bd2a_idx'),
        ),
        migrations.AddIndex(
            model_name='measurements',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_8fa075_idx'),
        ),
        migrations.AddIndex(
            model_name='imaging',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_dcfd0e_idx'),
        ),
        migrations.AddIndex(
            model_name='imaging',
            index=models.Index(fields=['type'], name='patient_rec_type_da31fb_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosis',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_9ab460_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosis',
            index=models.Index(fields=['icd_code'], name='patient_rec_icd_cod_1a862b_idx'),
        ),
        migrations.AddIndex(
            model_name='cmplabs',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_d6f767_idx'),
        ),
        migrations.AddIndex(
            model_name='clinicalnotes',
            index=models.Index(fields=['-date'], name='patient_rec_date_17d5cb_idx'),
        ),
        migrations.AddIndex(
            model_name='clinicalnotes',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_519e96_idx'),
        ),
        migrations.AddIndex(
            model_name='cbclabs',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_f56ea6_idx'),
        ),
        migrations.AddIndex(
            model_name='audittrail',
            index=models.Index(fields=['patient_identifier', '-timestamp'], name='patient_rec_patient_4f81e5_idx'),
        ),
        migrations.AddIndex(
            model_name='audittrail',
            index=models.Index(fields=['action', '-timestamp'], name='patient_rec_action_20d344_idx'),
        ),
        migrations.AddIndex(
            model_name='adls',
            index=models.Index(fields=['patient', '-date'], name='patient_rec_patient_fd139c_idx'),
        ),
    ]
